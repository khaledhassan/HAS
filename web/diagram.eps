%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1301.346457 663.346457
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.1 (Build 17B1003) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1302 664
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1302 664
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /U put
dup 34 /I put
dup 35 /D put
dup 36 /o put
dup 37 /r put
dup 38 /space put
dup 39 /L put
dup 40 /c put
dup 41 /k put
dup 42 /N put
dup 43 /d put
dup 44 /e put
dup 45 /A put
dup 46 /slash put
dup 47 /C put
dup 48 /i put
dup 49 /g put
dup 50 /h put
dup 51 /t put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/space 1 def
/slash 2 def
/A 3 def
/C 4 def
/D 5 def
/I 6 def
/L 7 def
/N 8 def
/U 9 def
/c 10 def
/d 11 def
/e 12 def
/g 13 def
/h 14 def
/i 15 def
/k 16 def
/o 17 def
/r 18 def
/t 19 def
/uni2B91 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92633B2598E0B1EDFA3C2732C9D3498122A5E23C1999619F9F2A05B051C0B681D7A669278A382A773898B9BA5E74E76D79507B26C6A220110B20D37F5163FA090532B073A3E57F242B478333FC8C597B4F9DCA3AC30189126322ADFD8883C4D8EFE8F6FD94BC06658172B7E30196BE8DE4D1B28EE7680964E9556DDDA7A9A3CD2421CD1BA4E502C598000B682E7FEA3624000F8FEAF53BAA8D313F9947712E0FA451880722302AAB76B44121BE2AFC5D2BE8302368D9FDC0DE7998193FC88E2D3C30823E92C2D75DA8EACD7E7D8A14DA7A1641218AE99A1DB9F53B937738045A2271C09144072BA445E2861307AD60026B3A4280F2353E4008D1F5961B73FEA9BE50BC25C2B361DD2BF780E93856526EDDF1CEFA9E9ECEA6A281CF8EE293AD6714B12C6F7874E0C0DD64A05D0F605FAB24A44B565222B9BA447E7028D003FF64CD2EDFD57523F58DE8F2F379053E75622D012FE42DB1521DD1FE9A58460981B718FBC8C153A9E1DBBCF377AAC6EA76D48B12605EB0BC00F65A1621E2E60B5D8495123EC883CA350499220D5511EC642328E2164A3C73BBA89988BF1DFF5D52E4EABC538419B34385E39C794B22A51966CC6E7D70AC21C20E6D53D2B136118A54991276E779FF07005FB642283C037760F92E485E71D85F4849B492E27AA00390AE2D3D46A10FDA3A2BF5FE4BB4E9367FF2DBE967E620545714672D037295BFF5259561AE6B4970B063D2D2CAEAF536EEAF0CA05A01D9882788FA2BD7BADC442415
6915ECFA355D0062D9DABC92498DDD28933863DFDD3828703EE9395E03FB9E58E6BFE8198BAC6EA9903C089090A04F8A42E8EA364FDA255FA56D867553C573C9017F8422C1490988317237352957EFC1477300EB2861D3460681B6A2654CE12E3E7EC806684A03619A18AA5429854495E90E815DE3CBEEFEEB75A2519BA6C12F340C920CABB4A6BD1942F27421908752FE2B9B11A938638117D26499BEC9CEAA0049D64B024F1115CDA94243640C61B829775EE86DDDB425B96E1C157D7A61B3ACD99BE5CD0B64E38B8A5F54E80E85B95B9055F239EECDE962EE37CE7E99522AA55D4370DB4F875F4705C00AE2A7F5DD86B5173B770146F261BBA4226D137AD73C857E3849FA360856D937AE112336397CCC93E9F87E95F946CF1065B4570628F9C76D4C9642AC06100FF05B5573F027262CA3CE87A377ADD717FB12497C66BEB93384E0AD811ED75D1A38EBE0C91AE6CE6DA86217118924484F2143142FEF0C17123C3A6826F8182266511FF9A149C7DC2D3E446128F6943CA57AC9C9DE6A799A19312333BEDC53CF966A87526ECCA1424F6DAF2541CEFB8D55FD7CF4252CB6C7C8C032CB8355C7DDE22982FCAB383AF251B43E95146A77201D96AF8BF03D125278491909C63B44579583E2D0F0E2EF31DD4122140F676AFD6F0A510B979FDAE1CAF871B35F12781B5CC52B70CD3017C6D293A8502FB7232316DC6D076F0B0F5946A659CE1870AD74C4533C55AA346A8640F824E2F9329C215AEC65C799BA303C077ABB177D2B64CE51F5BDAF3389AB0E3B2C8B46573AB13B8DDD5C7A5A53791B6FD99E52AE2394071DBA3CFC750183570BDA747FC36D504E5666BEFC3A8F5408979E0FDF644AFF80A5809025A328B1AAA9EB3F4D706696E2C0135610D1CC66537A43A4E10260D6083C5E5F7B328061AE04DCE37DC417E5535FC404BAD2B814634EE18FD8D8578EB03B73C76B4093F1CE68C124359C2559D36B2AC0D405A9DF8D11DADC14A6AA0AB74850FBCC527C1801B19BEC111541D350ECDDD50A5489FB2F6AE27461A109C71BF0981D7932EFE6070ECDED33DD165751833073ED0656DCC8B79360326A700A69AACA9617CCC9D2D4E8E459AA6F2D0C6969B4C79DF4CC2DE4F510627244484DE97D140F9A2EF1242F39CB09CCF48E9CC4B651FA35D5C5F8507DE9A1D0EFEF0D5F60E6535E39CDD13ED85871CF5C3F317B0B5CC8BAF026AB83CD9D9A87EE83192F0B0A126FC41924769C1C7018D73BCE977E7EABF3EB11C2FB2D942FBAB664E8220F3B867A8ED8B22A42AFF2561A1C1936EEB45016B16CDF4D53C0C7FB8FAFF106A4A09177C1F7991D6113C6D788955D491B59168290C56810F9FFF30B8A1A43D9DD4E458FAFD0C263D416DCEB53DBD8E47BCFA3E2A05DBAE5582CC80DB921621545D5A0674CD2A2197D95F93C800A99396858E28A9F3E9B
734CEDE14EC7423840E6CB4957D856BAAC8B4ACD8F6BDA15CC10048B9CBC36484FB12587B2FBD8E04FC93DA2F88701C1E0F96DD3A10C248A36060AAADCF7BF37C54671D693B15483FDA4F6A8B5FF4B9DF8C13559A045DB5FB07AE5E3020CF79297493FDFD085D21F620647AFAFD2E2435AFC3593EAF2919CBDF46504DA1F6A4AA5195D94AFE3DA4DD2CDF9296E7D84F18C1A1F14C56D2C52C3BC8CD034FBCA1B766FA9F0B67305BFFFBB691031646E3CF240A9BAB09355774F8303F398027C9C7D447B302C5908C07A89A87C09D0BF0156F6704B1BB37FB941CA815FC8449300E84693A517077FA1937A374DDFD23D8B02FE5CD36F11A433822EE2127321DE977370AD9EDFA9988DD96B5411DC3FE0043F7673F443D9A9924BDE413A0675D392D059AE45A37628661126FC95F98D77466C4CA94E175A1C7E127FE305C1E5E65D9B71DEFE02B353ABE90D09EEAB20EC1C71823251EEF5D927E57E1FCAB76DE71B39D6B40F3B3DE0160145DA0FEDBFD7ED415881A6B11AA85AB0BF62212C4FD6AC4044CD30DBFBBB29C8DBD7AB7A1CF0BCA65DB1AB0A4EB66266B8034CB1918FBEDED0B56E55E42FB45181EAC4CE6B9E34EBE541AEE0DB9859ACA927B4493C7A5A8CB2B6BBD490AA5465941AB71E8046B58703162E7DB2880CE296F6F24410131D5F563A2C71F401BE9A3818119FD3B98C3C70DA3CDC70058092B1EC42BD1BF8D21BD213123B52EC6C997A5BC4E5FD8F0B7C1416999D413721A3ADE718BB09F747B4EDBCD75FC9728F258CE1DD3ADAE88A620030998A55E6C179191B5E684FC398C32DC4FAB26F19CD686A5DF42CE289965C3D28C73E4244E8679B2B95188CE2648856A6223C1A240DE070523A3D4FB45DB1EE6D0C1DF96736CF2E36BBFD3FEC9F78DE3F7B973ACB44193C1E392D042461F66DFD96663C0532D3B974D8D4E2E6078B591AC535BD3EB08830FF3F5181A9A8662A12C2FB3EB6F088ED105E8A69B6CFB6987681F9FBE79D30A92988E1AA2108709B9EBD221387C8291DA844FCEFF8179293246FC414008C3E30989CFE3A3EEB0D70293C6BA41236ADC83F2F1416F180957D3F9E6C091BDC0344F2F58C2C5A5C21B7D099AF659F337EA0CB38FC053492775D8E4461DE56EE4BD29D6FBDC02D09DE0B1170DEF0DB56CE81A752776972D97BB50DD27B082821CA633F6C50AB298081B52D49AD7A971E0365102306F2ECCDB22F78BACFC4907C6DE5FC485C781D1C43AA0E9538DE0FD1B7838C6E56B583E90BCA7B9CC0AD0450252BBC1BE7AB14217CC8C76584D4EED3D911CAF242DB0FB4A4DD473AF2E6B9EF955D28D6D2D917C957E6EFD0991BFF87A54179C7B0B4040EB6FD90C6CCD070F0FEF7B3A4795A515EFB0FE2823560A39DEE4DB5CA2B4B0C04DC2D58CEED2019E177E0C15C289A8CD6A6C80C85992CB97AA10E9A43C696B70E
0DD20953BE2D9466F9DC24DB1E989F81D137F7BEFF88380B260612EF432866AAED3794C39896D5BECCCB2B58D22333BEB6EEBB46CE07D3D15F973B6581145711DE0EABD5F29319D83781589F599C15F563A123296BD8E34A3E0FA9C1150DD1FA4732BFC5B8DB17C29D13BD250E8A38A7BEAFF33B9AA16D56507231724674FC9733579F381D6F5FB1142D87F435C588EE1C7802E7423873F7EBFBF291A9DCEB6023F4DB3EBBC9398B48924C42865EEB8A9AB0048FB6E11513D958A63E2D065AFAD35A3B86857EE8B0D53AE9DC07F0AF329A92E2BEA5C681BCB9A76F2B2C33914C808F8E26E2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAB+PingFangHK-Regular 001.003%%CreationDate: 12/8/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAB+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid3 putdup 2 /gid15 putdup 3 /gid18 putdup 4 /gid19 putdup 5 /gid22 putdup 6 /gid24 putdup 7 /gid26 putdup 8 /gid29 putdup 9 /gid36 putdup 10 /gid37 putdup 11 /gid38 putdup 12 /gid68 putdup 13 /gid70 putdup 14 /gid71 putdup 15 /gid72 putdup 16 /gid74 putdup 17 /gid75 putdup 18 /gid76 putdup 19 /gid78 putdup 20 /gid79 putdup 21 /gid80 putdup 22 /gid81 putdup 23 /gid82 putdup 24 /gid83 putdup 25 /gid85 putdup 26 /gid86 putdup 27 /gid87 putdup 28 /gid88 putdup 29 /gid92 putdup 30 /gid94 putdup 31 /gid96 putdup 32 /gid329 putdup 33 /gid330 putdup 34 /gid335 putdup 35 /gid392 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6CE01DF4B83663DE01034AA39E98F862619C3A3E3C49B02474EA0A0F844285752BD616382E72F4C39BB19D6EF9CAE4914D696701A930476B878C45F29ABEFCE6F64C28EDEE7014896807CCF6A7BB8F8071D0FBB1B53301BBFC24CA060AB8C6BF79419C52BFB72993B36E3217B3460E000AC4CF30CAB9C60730C4D38316581E75FBD900A331553BA6CF2F77812F4241BC0AA277E8CFE9077DBF64F4338C258719835A7501E5C7D0F595976DEA147A0027974A3ED566EF88B1001D0D9A0A41512E6F91FE1D293BF54C85F53F7C56BDAB87AF8B386EC80B61711193775489C2D81FB4BE7617B1D2BAA662908B9DDAC11FA83F08B7FCEA85CE4B1F407363B7CC2FD8394B064C53779456809041BEBBBDDF941F86DE41A953FD24733C5D71A537C4DA5AB5486DCDA325F1905675F03B97D48A88DC645B5D41EE4ECADB75E44F2627ECA6A02B27458C893C7978344D5236B7A6282231DB2D6E4019D0271CC6EF1E5928A81019426DF2AFD77FEE403E1CAF993C71FEA423C57D5F1A0655FFE8550A6B0D7EE77AAEBDB7DA1947AF84F67A906C1679E3F46806F0BD11A022EA47B964FDCF13CCAB41BE51E5B2EF8588731CB54944F588E754AAF87C7289DBA3909F0BEBFD2182A9DCEFA658583686323110403FCA351B2F7B17E4A4164253CD4D1070295AECF252D2062CD25CB90F4B058228B5E1C45923CCD3EEE9C6FE76C695ED4B65FE4489D294E6B2C66FC0C0A999F43189598987F0ECE2DE7BE25BFADFEA155B7AA6ABA3CF9F0DA10A0D7730C9BF55242E20C94531A75034C3565B6BDCC80CCB1B0A5C9395CC70DF8E973A6FF09BAA55E43753950A8BEACA34B9AD8BCC6D6DD11D3926A014A20E1F0B61C9B1CFBE3C5746988684D8AE76346430BE81B0F287C826ACC6ADA6743634840AEECA2F48FCF22E4CC3C89BB4AE64D535A1A0C45873AA5957A9C36FAEAD33408397DF3819129F6E39D92241F14D2AF285FECB02DE64DD4BA42DA727E77958986BD361D3BBFBE2C41300773A86364E3C533FACA1FC46A535B395F02AD1F13A3A97EBA0D46F367478495FC8E7DDE7A2561B8C0CAB13246B217B4D6457EA200D8C0F2A48B0EBFF84387DC0AE48D6AE6AC9CE2F29CE126DFAE7D804504B344B90DB703FFC1585EF4426591B0840CEF7CCB8355991F2067E066E663352CAFC5F902D6E007AC06841E1D122DA0D12BF18C7A44962BC67D7E306D87F9AA3AD0F8703C3C83845FA7227DD1B8D47858ADCC4D888F2B4E0E20EACA87F70D9B6F127A76A9B8199BB8A5DE65083ED538AD9AA79C8668E45AF30B80CBDE4AFD3292AAC6415EC8DC7281E04BA3B0FE2C824D2F9C004E68E092D88C6AB81CD2DC6800BBF8FAEFDCDBCE559C3AC179C351EF9245D8C18E01A3D60BFF3893E484196AFBFEE0F036FED0C81CFC26B4CF26DB23FBDD614A83326DAF959EAEAEEF380872EB3A7C9424ACCE56FC5A715F3C20D9C4958AC4D126C4EDBCC43ED8B79E636446BF57FF2FF970DF619B5B1C2EC6EB49A39A102CA6015F96B2280256F3BE0E2EED770442891A74E5AC4395C9C02A31DCBA029E39D4A947639D969EC2C1B12967166294F39EE5F97462ABEB66E9A66B4EDC6205A38E13BA32A9C2237CC756D94036F355A847966F771C3088480F4D911B83BF02B6E11F178257D06A064FBE6F9EE64B2927160A5A14D4CEECAAEB1B3570BF0AB0D87625F4E73C2E52007858C62E4DB9CC0B1E88357F703924F6F7D90DBA03D70F8F24953C3B92A11EDC335D079669FC174686971FB1A2A469641F10FDE9117775E9716BBA46EC51DAD5EE1D7B87C2AD283F7376252C6313782347EF5978E2F2024439BCCEC07EC950941CB3D47B1FD3B229E6A1EB0D4402B72DC008A54BF35F7D0B73EE61BCE81347E5C5AAB1E818F1C5C37E9B6C9E1176762B4701B3E36F1713066DC616F67882F83674E191DCCEF01B650E7BC84A5580AA37E93F3F7AE18923D4E4EF9A240E20237C6CCF50693EE81EB0C288242A400DBB601DAD3B4C66B072554E189CE30A21AAC0E7F85269E0B0558548EF2D4BC26247C8006D325E2DE6C5BC9F58B7841C5B9A05F198847880DE6A3FA1C21A52C2C2A5EF922011AAA555E2C6A2322343019BDEBD2A4B4A87817034666EC8F64D5A017CCD4C6EA1BD31F38F3EF2FA85F8EC774F7CB2BFEEE7EF847740D224C018A8A2878F1C8A3CEE37172631956F87D8BE87DD10B5C95FB59E7DEBE875E540FFEB8A486483FB09DA8A6C5FB2AE6414BD6F2990F268A8A0D2D13F4F8B90FE3D210DAF4BA5856624C918D514CF8244431CADF97EF655A4FEB59A760FFFCC09E785B46080BA6F5BC4022D4CD42614FAF11B023EDCFA605ED6C0F81EF578E8230EC48B1CEFBC410F952701CD6C4FF635C4D018303040057567395D6FBA2718097E748596EA6518EF9735715ACAF32CF693A72BC1E72A5F98467049C01CB6F4437406ED1A434D2631697945A0D4093D22E4D7F038D22F8822C200886667CCB3BE6A6891E8C26052E1D40F77F2AA1845F260FFD67509F114255A6B7E8BD55BA96CDE1D1D83518702F6F2842FC489898FF0B75530C0156457C7F4EA35ACC1CAF3FAFDC36E22F706D22A0FEC656C0BDE6C8E2F0F6188AD187B0372E882E6884921EC09D68598A6E18887D5604DED821AE4C134C2C1F36324FAAD6A3A673923DA9A5BD395BB971C09903DDC9B6669AF1EA0CF7423861B5DDD171BC0748F7CCCC05A754B6614D859AFE1179DFBFE7EF3090533A3C524692E4BB8606BAC2204DFE2BCD4E97A6B39D5B4DB142DACE68F251BA1C92696878F450B20A67754AC23B16F1A26FE54B849F4A54678A8327ACD0FFE97DC952C6870967B10C94987944C91236806FB4EC884B26DC2A07024A7A50301FF6B3CCF9CBDBC1A208CF804A4C02A3C64A8A358CE8798181DDB63BE66C977D1C673B19358AA688C0CED8808CBAE6780099759CF2695F32A0D634BBAC792B7CBC68F6DC266221597608469E4C4A8001E8DB2BD04EB1D01B8600965E9B8B0733E1DA26D24C01EC72E51AC4C14762AA950E3B743CF998BB6978368EDBA4AC2146FC61DD60ADB220BD6C53787084371DB58FBFCA432C64A5A0333B0930239CF2E599EEB5498B24215B424FE0AF40F73F7C7BAED2525572A9E906D51C2269B078D9988C2BEAAB68A492E0652EABF8C5EAA7B37B9C532742070D80369B67549C5DC93D8D490C54EBB372B80D412EEBE1B1FD04E0BCEC652A06EB48B9C093162434C3CA26E7E9F29D8E79ABB0CDED171053D9C3A9F43354473F19B474AE0A92A80E52F192F2480F5BE8D1ABB8517EEE376DFA06E34095784C2FA23C1E3DDB1A7551693F16362683E80C7EE406B507A316EF1DC3ACB3B35C708CDA8016781903D5F3EE3DDA7E32D33D230541B9971627AB7C5496AA086E7C10B9597EA568FE1B0081ECEBFD26A758571DE83527D3B93BF161826B29CF9BA81485574135D49D9EEF3FCF47ECAA1C84DC152DEB6B8E3396923556518945B8C10304F89229C3521F48FBD0E4275BD122EA9497425941EC3A0CB2C29EDF0EED8FE87ED9B787DD20CBA0AB00F09F1DE9D5081AA83F22488C712CAC0BFE5251972EBF4FC92FF560AC363B86EDDBF782DEEB848AADB8095A83E4317708687F74A27206443AF46E79F678FB6557B6F62856AC98985AEBAE0E64CA4084C829E5BB372A54D03F74A0EF5DBE96DE82BBBE9B7E5DC483BD61BCB39065E57BB6474F4B75D0226C56A9238E5FF23469297583F2843B85B727D3ACA581DCC6C5D67BC4A896C66B77514AA8D34E33FA826BC63128305CA59C6A6AAF73B406AE0DB014C1473D076F067AA8C0B952CC43E05D7F50D6042EE5C7287570C8E06F763AE5C8EB2E0A3C38DEB0FC82F55E23C532A7C681F7B63216CF805B002EDF6D5D9D205A0CED7CDA5663F74230EC672C28C1B4FDEAFEE102D755AB6A8DEFB1F83ED9EA09C5D36B9D3146A656CA6165994B880C7918E48B9DADBACD1E43B7FA0DB796C83A2B1F0D45FC4E9611307397FFA4F46263740E4447AE4893CA489492388A49C9023A147CF5BEF7F647062FD86BFAF5B3EE3D7CFDFA755320E8718006FB40ED68398FCD5B7A4D13BA98DC44537CCB1897F17CEE83CDF8B121D715E1C3FC01EECB65DF0A3B792A858E0999113780670741A6BE83F1DC426F9DAF1725F157FA397429D96F54C6E4557051E93C6B8EBCDC0B0BA38892745199C3D2686FD7808CCB87FA02C04A5B2B4F1C0D8CE0A64E7192B90AAC3EA76ED472883EFFE74D23B36520507CA160359FC1C9A9C7FE432C0C33370E422438644B6BCE0021A7B799ADDF3FCA091D816F52A1CD148C97CA6234939F20C8D0CC4FB2255ADD98F3C5BDA4BB16581B533BE4374BEFEF21B08E9E1F01D21008323A5F5E274633331C5BF2947BB09A4C4C380607BC6A2939C7B2425BB8D9C1C31CE4B10F816C32C8301C47368E341D280F75D52BE3FC6B53F1D92D9F1C532DAF13715DDF6F7034D06AF1949541D04F80103ABE002B33F9F80219D7496CE3BB69DB74474B3C5F6AA1A456A7209CC52DEF1411E5694DAA8E76822CE89416F5B7BD4D3E00C8F85AFB565067DC4C7ECC77B819521D80E3B00BA836509D7791F81B17C5E752AD2EBE99E3D7EA6B74F26FDAEC5C348DFD1D46F10D9175F60BD50B836C0EB5603E5AACDDB567E11E952333D0CF811C5E80AE01C0F814AD61599D8F538485D91D905F3207C7C2D50E1022B712341F4BF3FC0BA485E0505FB67DE31784F31E42B059BB281C0A877740AA67F697C4D5D2E484743F9D5CD4AC92A89E9506CE2E9F5639FD05095E8A245673D2CB9E65A9A359144229607722D8E13FB5D9FB58E5D603ECEBAC7FA4E94900FA8760F4F9C7524EE55393019E6EC310F8ECC68C2E1B9B70D869AF95B53C4CDCC34CA1458FFF7D583A9598DFFDC8C35B0EF199ACAEE4909A9F21BB910BA444E6D20540D927F644688665DEBA4B538CADC0C9252797BCB17BA47565A880161B0D82821C92D3E39F711F63618B39A85B427073329ECFC51F6872E038AD57054AEDB0C6F187C0792965280224A975131F10F1FB493B5667BF120FE317036169D841D2F5BD0ED08681597D638906C3A4AD42E6617ECDDA0FB63C85352A78C3AE9CC0FA854FCDCA0CBC82E094990CD5F5F2395006B726442ED1C7C57E612BBDA86BB7BACE787BD40310830A6A0B3DD9357D25CF29C29D6E4BDE8E07CABF7609AB61E3ADD0074FE813AA4479CD1107401C5CCE302E9C4CEC9E3D986429060CCE36B12E83034CF323AEF4D7A074DD8107643EC1A42224CBB21835F86C193F58703837B64D18818353DC8DC112C888A74518A3BD4DD11DAE8B523B030FC552B5C2C4A0E253B5DC0F7942903C8A35C40124AE0A2994729E169DCD9F83D90564DDEB89F002F2126761E35E2B70D6B8F36877CFB87912CAE08390334EDC7D7596AA829341C82C219E2B488D15B66EDEF7CC8F17521153FEE9D041568AE06C27913E3DF27AA8F59E963EC5CB4611AAB81E0F0A2BF338B3C46BF360BA667A733B77C656516091D08D52C93E8A923567A294966F7670DE9B2B4AABEAD787C68433E61726C5130240E97E69D38FEE88C2DCC7B7DE374C83330BD0F8CFC4388E256EF0EED51C95D5A7B3D0AE0EA28651481B31569515480C2B5EA523D108DF6A8D2F7B3F7B833B632C8FC343E70E438C17310E2AC7172EEBD67DEDABF67B698FB1A046582350760C1C7FB2C2B26E37A6D19550F5A82603C1FC0E0F9E5407CCC744D8B4F38A44C189BFBBDC192065CE1C5BE7C474009181CDB489EF74DF5532CDC134C85A58EFB1FAFAF88052DE01F9DD2AAB40B94725834789586FD0B58153CED90800EF0422FDC72F1B1A4489D44D0EDBA44E2F8D2EAB56EC20A260A400BFEB3D84F03093EBBA169A7E4EACF28477A67DAE2DFD974C98E1DAAE7E6BCB5601FD3275B06605A28F894E395F172CB932E1F5DD7453D9E59E525F7DB3DC61EAE132A30755BD5E8C26382F6B4B877050CAB8C59A098D7EC2E994623C0653D6022E7FFD929D6DF71DAE386456AD8C5D6DF82CD53229D9A581FF0A4E3E9C65A129A3A4FE284916FF82F4659E8ECCD09D8792777813C9D1BD3E508CDDA9BA3B8F449CDE8A9F3699CD2E8121F9EF15D9D5AE17AE762A997C3EF88BE14E9189104E80FA18ACDBFE1F45D2ED8A8967D13AF409079E60296F5E8F3AC45798526764102A231424496AAC2C48E1A2B6EBE1D1683866BCD1322373779C45B6C6446668C9D24894378C5999066C468315F934B07E3728384F03B3BF27A5F470085CACFD8CD97415BB94BD71639D7279EF2956418FAFE9AB09024FF3F9E5DF4A3992A775E1D468BBEEFD45CAEA9F4944B87A1AF8C7D9FED9861F492543DF1C04D5EDC78BC923322967A52D815D60D936424839A2E8547CA4B3E7302A0820231CB3D30636064985B690350F4397158E7CEBB64ECEDF917E030EA70A99463003AC87D1912EFBE63E50E303DE0478DC8AFEA58DA2BC6C6C707284ABB8D6A471EDCC474FCE76C12C35A21582AACAFD1646927EC6696D6DBB4FCF4B8E7E4120ED7F95367755DBAD2E257B7E518F534EED2193615476977EC1622161D1105B6EC97617226B0592AB408F55F461A2D0A9CE1A9CF1D7D0707E437EFFFDAE1B7FAD329931AF6DDDBD1F0C1D46C89F572E00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid94 putdup 34 /gid329 putdup 35 /gid87 putdup 36 /gid92 putdup 37 /gid83 putdup 38 /gid72 putdup 39 /gid330 putdup 40 /gid29 putdup 41 /gid71 putdup 42 /gid82 putdup 43 /gid85 putdup 44 /gid15 putdup 45 /gid3 putdup 46 /gid86 putdup 47 /gid68 putdup 48 /gid88 putdup 49 /gid79 putdup 50 /gid70 putdup 51 /gid78 putdup 52 /gid18 putdup 53 /gid81 putdup 54 /gid96 putdup 55 /gid76 putdup 56 /gid80 putdup 57 /gid36 putdup 58 /gid37 putdup 59 /gid335 putdup 60 /gid26 putdup 61 /gid19 putdup 62 /gid75 putdup 63 /gid22 putdup 64 /gid392 putdup 65 /gid74 putdup 66 /gid38 putdup 67 /gid24 putreadonly def/$SubFontArray [/AAAAAB+PingFangHK-Regular findfont ] def/CharProcs 37 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid3 {(\001) 0 $SP} putdup /gid15 {(\002) 0 $SP} putdup /gid18 {(\003) 0 $SP} putdup /gid19 {(\004) 0 $SP} putdup /gid22 {(\005) 0 $SP} putdup /gid24 {(\006) 0 $SP} putdup /gid26 {(\007) 0 $SP} putdup /gid29 {(\010) 0 $SP} putdup /gid36 {(\011) 0 $SP} putdup /gid37 {(\012) 0 $SP} putdup /gid38 {(\013) 0 $SP} putdup /gid68 {(\014) 0 $SP} putdup /gid70 {(\015) 0 $SP} putdup /gid71 {(\016) 0 $SP} putdup /gid72 {(\017) 0 $SP} putdup /gid74 {(\020) 0 $SP} putdup /gid75 {(\021) 0 $SP} putdup /gid76 {(\022) 0 $SP} putdup /gid78 {(\023) 0 $SP} putdup /gid79 {(\024) 0 $SP} putdup /gid80 {(\025) 0 $SP} putdup /gid81 {(\026) 0 $SP} putdup /gid82 {(\027) 0 $SP} putdup /gid83 {(\030) 0 $SP} putdup /gid85 {(\031) 0 $SP} putdup /gid86 {(\032) 0 $SP} putdup /gid87 {(\033) 0 $SP} putdup /gid88 {(\034) 0 $SP} putdup /gid92 {(\035) 0 $SP} putdup /gid94 {(\036) 0 $SP} putdup /gid96 {(\037) 0 $SP} putdup /gid329 {( ) 0 $SP} putdup /gid330 {(!) 0 $SP} putdup /gid335 {(") 0 $SP} putdup /gid392 {(#) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F2.1/PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1301.3464 663.34644 rc
0 663.34644 m
1301.3464 663.34644 l
1301.3464 -40.653542 l
0 -40.653542 l
h
0 663.34644 m
f
1125.3544 623.66144 m
1272.7559 623.66144 l
1272.7559 490.43307 l
1125.3544 490.43307 l
h
1125.3544 623.66144 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 663.34644 cm
1125.3544 39.68504 m
1272.7559 39.68504 l
1272.7559 172.91339 l
1125.3544 172.91339 l
h
1125.3544 39.68504 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1199.0551 557.04724 cm
/F1.1[ 20 0 0 -20 0 0]sf
-9.8100004 -4.5599976 m
(!")[ 14.440000 0.000000 ] xS
-46.490002 19 m
(#$$%&'$\(\))[ 14.080000 11.480000 11.480000 6.660000 5.560000 11.120000 11.480000 10.740000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 663.34644 cm
1125.3544 61.968773 m
860.2937 61.968773 l
S
0 i
CM
852.2937 601.37769 m
860.2937 598.37769 l
860.2937 604.37769 l
h
852.2937 601.37769 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
852.2937 61.968773 m
860.2937 64.968773 l
860.2937 58.968773 l
h
852.2937 61.968773 m
S
1 J
1 j
0.60000002 i
1115.4543 139.60629 m
853.22833 139.60629 l
S
0 i
CM
1123.4543 523.74017 m
1115.4543 526.74017 l
1115.4543 520.74017 l
h
1123.4543 523.74017 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
1123.4543 139.60629 m
1115.4543 136.60629 l
1115.4543 142.60629 l
h
1123.4543 139.60629 m
S
/Cs2 SC
0 sc
1 0 0 -1 953.52753 541.96454 cm
/F2.1[ 16 0 0 -16 0 0]sf
-168.552 6 m
(!"#$%&'\("\)**+',-".#/#0.'\(-"1*23&\)4051*23&\)'6)[ 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 8.592000 9.376000 9.376000 9.376000 5.840000 8.592000 4.224000 5.328000 8.592000 8.080000 5.680000 8.944000 5.680000 8.960000 8.080000 8.592000 4.224000 5.328000 8.592000 3.760000 9.376000 8.752000 8.464000 8.880000 9.376000 8.000000 8.960000 8.944000 3.760000 9.376000 8.752000 8.464000 8.880000 9.376000 8.592000 0.000000 ] xS
1 0 0 -1 970.5354 618.5 cm
-150.48 6 m
(!"#$%&'\("\)**+',-"/2#7*5'\(-"1*234051*23'6)[ 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 8.592000 9.376000 9.376000 9.376000 5.840000 8.592000 4.224000 5.328000 8.592000 8.944000 8.752000 5.680000 4.096000 9.376000 8.944000 8.592000 4.224000 5.328000 8.592000 3.760000 9.376000 8.752000 8.464000 8.000000 8.960000 8.944000 3.760000 9.376000 8.752000 8.464000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
14.173228 609.48816 m
161.5748 609.48816 l
161.5748 476.25986 l
14.173228 476.25986 l
h
14.173228 609.48816 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 663.34644 cm
14.173228 53.858269 m
161.5748 53.858269 l
161.5748 187.08661 l
14.173228 187.08661 l
h
14.173228 53.858269 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 87.874016 542.87402 cm
/F1.1[ 20 0 0 -20 0 0]sf
-27.040001 -4.5599976 m
(&*$+,)[ 5.560000 14.440000 11.480000 11.860000 0.000000 ] xS
-21.85 19 m
(#$$%)[ 14.080000 11.480000 11.480000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 663.34644 cm
171.47481 153.77953 m
476.22046 153.77953 l
S
0 i
CM
163.47481 509.56693 m
171.47481 506.56693 l
171.47481 512.56696 l
h
163.47481 509.56693 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
163.47481 153.77953 m
171.47481 156.77953 l
171.47481 150.77953 l
h
163.47481 153.77953 m
S
1 J
1 j
0.60000002 i
161.5748 87.165352 m
466.32047 87.165352 l
S
0 i
CM
474.32047 576.18109 m
466.32047 579.18109 l
466.32047 573.18109 l
h
474.32047 576.18109 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
474.32047 87.165352 m
466.32047 84.165352 l
466.32047 90.165352 l
h
474.32047 87.165352 m
S
/Cs2 SC
0 sc
1 0 0 -1 407.78348 594.80707 cm
/F2.1[ 16 0 0 -16 0 0]sf
-240.32001 6 m
(!"8/2'\('99::;',-"#$%&'\(-"\)**+',-".#/#0.'\(-"1*23&\)4051*23&\)'6)[ 5.328000 8.592000 13.680000 8.944000 8.752000 8.592000 4.224000 8.592000 10.512000 10.512000 10.832000 10.832000 16.000000 8.592000 4.224000 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 5.328000 8.592000 9.376000 9.376000 9.376000 5.840000 8.592000 4.224000 5.328000 8.592000 8.080000 5.680000 8.944000 5.680000 8.960000 8.080000 8.592000 4.224000 5.328000 8.592000 3.760000 9.376000 8.752000 8.464000 8.880000 9.376000 8.000000 8.960000 8.944000 3.760000 9.376000 8.752000 8.464000 8.880000 9.376000 8.592000 0.000000 ] xS
1 0 0 -1 390.7756 524.95667 cm
-203.07201 6 m
(!"8/2'\('99::;',-"#$%&'\(-"\)**+',-"/2#7*5'\(-"051*23'6)[ 5.328000 8.592000 13.680000 8.944000 8.752000 8.592000 4.224000 8.592000 10.512000 10.512000 10.832000 10.832000 16.000000 8.592000 4.224000 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 5.328000 8.592000 9.376000 9.376000 9.376000 5.840000 8.592000 4.224000 5.328000 8.592000 8.944000 8.752000 5.680000 4.096000 9.376000 8.944000 8.592000 4.224000 5.328000 8.592000 8.960000 8.944000 3.760000 9.376000 8.752000 8.464000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
15.692911 396.88977 m
163.09448 396.88977 l
163.09448 263.66141 l
15.692911 263.66141 l
h
15.692911 396.88977 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 663.34644 cm
15.692911 266.4567 m
163.09448 266.4567 l
163.09448 399.68503 l
15.692911 399.68503 l
h
15.692911 266.4567 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 89.3937 330.2756 cm
/F1.1[ 20 0 0 -20 0 0]sf
-24.26 -4.5599976 m
(*$+,)[ 14.440000 11.480000 11.860000 0.000000 ] xS
-17.030001 19 m
(-./)[ 12.960000 6.660000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 663.34644 cm
173.49449 366.37796 m
477.74014 366.37796 l
S
0 i
CM
165.49449 296.96851 m
173.49449 293.96851 l
173.49449 299.96851 l
h
165.49449 296.96851 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
165.49449 366.37796 m
173.49449 369.37796 l
173.49449 363.37796 l
h
165.49449 366.37796 m
S
1 J
1 j
0.60000002 i
163.59448 299.76376 m
467.84015 299.76376 l
S
0 i
CM
475.84015 363.58267 m
467.84015 366.58267 l
467.84015 360.58267 l
h
475.84015 363.58267 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
475.84015 299.76376 m
467.84015 296.76376 l
467.84015 302.76376 l
h
475.84015 299.76376 m
S
/Cs2 SC
0 sc
1 0 0 -1 366.78345 380.38977 cm
/F2.1[ 16 0 0 -16 0 0]sf
-200.71201 6 m
(!"8/2'\('99::;',-"#$%&'\(-"/2',-"#'\(-"<=',-">'\(-"?='6)[ 5.328000 8.592000 13.680000 8.944000 8.752000 8.592000 4.224000 8.592000 10.512000 10.512000 10.832000 10.832000 16.000000 8.592000 4.224000 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 5.328000 8.592000 8.944000 8.752000 8.592000 4.224000 5.328000 8.592000 5.680000 8.592000 4.224000 5.328000 8.592000 8.752000 9.600000 8.592000 4.224000 5.328000 8.592000 8.896000 8.592000 4.224000 5.328000 8.592000 9.600000 9.600000 8.592000 0.000000 ] xS
1 0 0 -1 366.78345 312.35828 cm
-194.144 6 m
(!"8/2'\('99::;',-"#$%&'\(-"/2',-"/2#7*5'\(-"*54*@'6)[ 5.328000 8.592000 13.680000 8.944000 8.752000 8.592000 4.224000 8.592000 10.512000 10.512000 10.832000 10.832000 16.000000 8.592000 4.224000 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 5.328000 8.592000 8.944000 8.752000 8.592000 4.224000 5.328000 8.592000 8.944000 8.752000 5.680000 4.096000 9.376000 8.944000 8.592000 4.224000 5.328000 8.592000 9.376000 8.944000 8.000000 9.376000 10.976000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
17.007874 178.62206 m
164.40945 178.62206 l
164.40945 45.393703 l
17.007874 45.393703 l
h
17.007874 178.62206 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 663.34644 cm
17.007874 484.7244 m
164.40945 484.7244 l
164.40945 617.95276 l
17.007874 617.95276 l
h
17.007874 484.7244 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 90.708664 112.00787 cm
/F1.1[ 20 0 0 -20 0 0]sf
-24.26 -4.5599976 m
(*$+,)[ 14.440000 11.480000 11.860000 0.000000 ] xS
-22.23 19 m
('0123)[ 11.120000 4.440000 11.480000 11.120000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 663.34644 cm
174.80945 584.64569 m
479.05511 584.64569 l
S
0 i
CM
166.80945 78.70079 m
174.80945 75.70079 l
174.80945 81.70079 l
h
166.80945 78.70079 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
166.80945 584.64569 m
174.80945 587.64569 l
174.80945 581.64569 l
h
166.80945 584.64569 m
S
1 J
1 j
0.60000002 i
164.90945 518.03149 m
469.15512 518.03149 l
S
0 i
CM
477.15512 145.31496 m
469.15512 148.31496 l
469.15512 142.31496 l
h
477.15512 145.31496 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
477.15512 518.03149 m
469.15512 515.03149 l
469.15512 521.03149 l
h
477.15512 518.03149 m
S
/Cs2 SC
0 sc
1 0 0 -1 365.26376 162.12206 cm
/F2.1[ 16 0 0 -16 0 0]sf
-183.808 6 m
(!"8/2'\('99::;',-"#$%&'\(-"17A>#',-".#/#0.'\(-#+0&6)[ 5.328000 8.592000 13.680000 8.944000 8.752000 8.592000 4.224000 8.592000 10.512000 10.512000 10.832000 10.832000 16.000000 8.592000 4.224000 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 5.328000 8.592000 3.760000 4.096000 9.456000 8.896000 5.680000 8.592000 4.224000 5.328000 8.592000 8.080000 5.680000 8.944000 5.680000 8.960000 8.080000 8.592000 4.224000 5.328000 5.680000 5.840000 8.960000 8.880000 0.000000 ] xS
1 0 0 -1 368.09842 94.090553 cm
-201.24001 6 m
(!"8/2'\('99::;',-"#$%&'\(-"17A>#',-"/2#7*5'\(-"*54*@'6)[ 5.328000 8.592000 13.680000 8.944000 8.752000 8.592000 4.224000 8.592000 10.512000 10.512000 10.832000 10.832000 16.000000 8.592000 4.224000 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 5.328000 8.592000 3.760000 4.096000 9.456000 8.896000 5.680000 8.592000 4.224000 5.328000 8.592000 8.944000 8.752000 5.680000 4.096000 9.376000 8.944000 8.592000 4.224000 5.328000 8.592000 9.376000 8.944000 8.000000 9.376000 10.976000 8.592000 0.000000 ] xS
1 0 0 -1 368.09842 60.074806 cm
-200.616 6 m
(!"8/2'\('99::;',-"#$%&'\(-"17A>#',-"/2#7*5'\(-".#/#0.'6)[ 5.328000 8.592000 13.680000 8.944000 8.752000 8.592000 4.224000 8.592000 10.512000 10.512000 10.832000 10.832000 16.000000 8.592000 4.224000 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 5.328000 8.592000 3.760000 4.096000 9.456000 8.896000 5.680000 8.592000 4.224000 5.328000 8.592000 8.944000 8.752000 5.680000 4.096000 9.376000 8.944000 8.592000 4.224000 5.328000 8.592000 8.080000 5.680000 8.944000 5.680000 8.960000 8.080000 8.592000 0.000000 ] xS
1 0 0 -1 396.44489 136.61024 cm
-213.336 6 m
(!"8/2'\('99::;',-"#$%&'\(-"17A>#',-"8*#7*5'\(-"\)&#&2#&\)'6)[ 5.328000 8.592000 13.680000 8.944000 8.752000 8.592000 4.224000 8.592000 10.512000 10.512000 10.832000 10.832000 16.000000 8.592000 4.224000 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 5.328000 8.592000 3.760000 4.096000 9.456000 8.896000 5.680000 8.592000 4.224000 5.328000 8.592000 13.680000 9.376000 5.680000 4.096000 9.376000 8.944000 8.592000 4.224000 5.328000 8.592000 9.376000 8.880000 5.680000 8.880000 8.752000 5.680000 8.880000 9.376000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1125.3544 394.05511 m
1272.7559 394.05511 l
1272.7559 260.82678 l
1125.3544 260.82678 l
h
1125.3544 394.05511 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 663.34644 cm
1125.3544 269.29135 m
1272.7559 269.29135 l
1272.7559 402.51968 l
1125.3544 402.51968 l
h
1125.3544 269.29135 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1199.0551 327.44095 cm
/F1.1[ 20 0 0 -20 0 0]sf
-9.8100004 -6.7799988 m
(!")[ 14.440000 0.000000 ] xS
-18.76 18.779999 m
(-)s
/F2.1[ 20 0 0 -20 0 0]sf
-5.8000002 18.779999 m
(4B)[ 10.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 663.34644 cm
1125.3544 291.57507 m
860.2937 291.57507 l
S
0 i
CM
852.2937 371.77139 m
860.2937 368.77139 l
860.2937 374.77139 l
h
852.2937 371.77139 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
852.2937 291.57507 m
860.2937 294.57507 l
860.2937 288.57507 l
h
852.2937 291.57507 m
S
1 J
1 j
0.60000002 i
1115.4543 369.21259 m
853.22833 369.21259 l
S
0 i
CM
1123.4543 294.13385 m
1115.4543 297.13385 l
1115.4543 291.13385 l
h
1123.4543 294.13385 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
1123.4543 369.21259 m
1115.4543 366.21259 l
1115.4543 372.21259 l
h
1123.4543 369.21259 m
S
/Cs2 SC
0 sc
1 0 0 -1 908.17322 312.35828 cm
/F2.1[ 16 0 0 -16 0 0]sf
-207.2 6 m
(!"#$%&'\("\)**+',-"#'\(-"<=',-">'\("C=',-".#/#0.'\(-"*54*@'6)[ 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 8.592000 9.376000 9.376000 9.376000 5.840000 8.592000 4.224000 5.328000 8.592000 5.680000 8.592000 4.224000 5.328000 8.592000 8.752000 9.600000 8.592000 4.224000 5.328000 8.592000 8.896000 8.592000 4.224000 8.592000 9.600000 9.600000 8.592000 4.224000 5.328000 8.592000 8.080000 5.680000 8.944000 5.680000 8.960000 8.080000 8.592000 4.224000 5.328000 8.592000 9.376000 8.944000 8.000000 9.376000 10.976000 8.592000 0.000000 ] xS
1 0 0 -1 894 388.89371 cm
-230.03999 6 m
(!"#$%&'\("/2',-"8*\)&'\(-")[ 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 8.592000 8.944000 8.752000 8.592000 4.224000 5.328000 8.592000 13.680000 9.376000 9.376000 8.880000 8.592000 4.224000 5.328000 0.000000 ] xS
/Cs3 SC
1 0.14913 0 sc
-50.360001 6 m
(8/50/1)[ 13.680000 8.944000 8.944000 8.960000 8.944000 0.000000 ] xS
/Cs1 SC
0 0 0 sc
2.872 6 m
(4)s
/Cs2 SC
0 sc
10.872 6 m
(/0#*',-"/2#7*5'\(-")[ 8.944000 8.960000 5.680000 9.376000 8.592000 4.224000 5.328000 8.592000 8.944000 8.752000 5.680000 4.096000 9.376000 8.944000 8.592000 4.224000 5.328000 0.000000 ] xS
/Cs3 SC
1 0.14913142 0 sc
143.09599 6 m
(*54*@)[ 9.376000 8.944000 8.000000 9.376000 0.000000 ] xS
/Cs2 SC
0 sc
189.76801 6 m
(4<='6)[ 8.000000 8.752000 9.600000 8.592000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1125.3544 161.61418 m
1272.7559 161.61418 l
1272.7559 28.38583 l
1125.3544 28.38583 l
h
1125.3544 161.61418 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 663.34644 cm
1125.3544 501.73227 m
1272.7559 501.73227 l
1272.7559 634.96063 l
1125.3544 634.96063 l
h
1125.3544 501.73227 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1199.0551 95 cm
/F1.1[ 20 0 0 -20 0 0]sf
-9.8100004 -4.5599976 m
(!")[ 14.440000 0.000000 ] xS
-22.23 19 m
('0123)[ 11.120000 4.440000 11.480000 11.120000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 663.34644 cm
1125.3544 524.01599 m
860.2937 524.01599 l
S
0 i
CM
852.2937 139.33044 m
860.2937 136.33044 l
860.2937 142.33044 l
h
852.2937 139.33044 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
852.2937 524.01599 m
860.2937 527.01599 l
860.2937 521.01599 l
h
852.2937 524.01599 m
S
1 J
1 j
0.60000002 i
1115.4543 601.65356 m
853.22833 601.65356 l
S
0 i
CM
1123.4543 61.692917 m
1115.4543 64.692917 l
1115.4543 58.692917 l
h
1123.4543 61.692917 m
f
0 J
0 j
1 0 0 -1 0 663.34644 cm
1123.4543 601.65356 m
1115.4543 598.65356 l
1115.4543 604.65356 l
h
1123.4543 601.65356 m
S
/Cs2 SC
0 sc
1 0 0 -1 976.20471 85.586617 cm
/F2.1[ 16 0 0 -16 0 0]sf
-130.328 6 m
(!"#$%&'\("\)**+',-".#/#0.'\(-"*54*@'6)[ 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 8.592000 9.376000 9.376000 9.376000 5.840000 8.592000 4.224000 5.328000 8.592000 8.080000 5.680000 8.944000 5.680000 8.960000 8.080000 8.592000 4.224000 5.328000 8.592000 9.376000 8.944000 8.000000 9.376000 10.976000 8.592000 0.000000 ] xS
1 0 0 -1 894 156.45276 cm
-216.864 6 m
(!"#$%&'\("/2',-"8*\)&'\(-")[ 5.328000 8.592000 5.680000 7.936000 9.376000 8.880000 8.592000 4.224000 8.592000 8.944000 8.752000 8.592000 4.224000 5.328000 8.592000 13.680000 9.376000 9.376000 8.880000 8.592000 4.224000 5.328000 0.000000 ] xS
/Cs1 SC
0.98624605 0.0071153641 0.027434181 sc
-37.183998 6 m
(8/50/1)[ 13.680000 8.944000 8.944000 8.960000 8.944000 0.000000 ] xS
0 0 0 sc
16.048 6 m
(4)s
/Cs2 SC
0 sc
24.048 6 m
(/0#*',-"/2#7*5'\(-")[ 8.944000 8.960000 5.680000 9.376000 8.592000 4.224000 5.328000 8.592000 8.944000 8.752000 5.680000 4.096000 9.376000 8.944000 8.592000 4.224000 5.328000 0.000000 ] xS
/Cs1 SC
0.98624605 0.0071207881 0.027434189 sc
156.272 6 m
(*54*@)[ 9.376000 8.944000 8.000000 9.376000 0.000000 ] xS
/Cs2 SC
0 sc
202.944 6 m
('6)[ 8.592000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
